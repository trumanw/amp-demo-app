/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumExperimentGoal } from "./EnumExperimentGoal";
import { IsEnum, IsOptional, IsString, ValidateNested } from "class-validator";
import { OptimizationConfigWhereUniqueInput } from "../../optimizationConfig/base/OptimizationConfigWhereUniqueInput";
import { Type } from "class-transformer";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { SearchSpaceWhereUniqueInput } from "../../searchSpace/base/SearchSpaceWhereUniqueInput";
import { TrialUpdateManyWithoutExperimentsInput } from "./TrialUpdateManyWithoutExperimentsInput";

@InputType()
class ExperimentUpdateInput {
  @ApiProperty({
    required: false,
    enum: EnumExperimentGoal,
  })
  @IsEnum(EnumExperimentGoal)
  @IsOptional()
  @Field(() => EnumExperimentGoal, {
    nullable: true,
  })
  goal?: "MOO";

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string;

  @ApiProperty({
    required: false,
    type: () => OptimizationConfigWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OptimizationConfigWhereUniqueInput)
  @IsOptional()
  @Field(() => OptimizationConfigWhereUniqueInput, {
    nullable: true,
  })
  optimizationConfig?: OptimizationConfigWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  owner?: UserWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => SearchSpaceWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => SearchSpaceWhereUniqueInput)
  @IsOptional()
  @Field(() => SearchSpaceWhereUniqueInput, {
    nullable: true,
  })
  searchSpace?: SearchSpaceWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => TrialUpdateManyWithoutExperimentsInput,
  })
  @ValidateNested()
  @Type(() => TrialUpdateManyWithoutExperimentsInput)
  @IsOptional()
  @Field(() => TrialUpdateManyWithoutExperimentsInput, {
    nullable: true,
  })
  trials?: TrialUpdateManyWithoutExperimentsInput;
}

export { ExperimentUpdateInput as ExperimentUpdateInput };
