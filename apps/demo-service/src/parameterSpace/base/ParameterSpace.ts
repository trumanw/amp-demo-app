/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsJSONValue } from "@app/custom-validators";
import {
  IsOptional,
  IsDate,
  ValidateNested,
  IsString,
  IsEnum,
} from "class-validator";
import { GraphQLJSON } from "graphql-type-json";
import { JsonValue } from "type-fest";
import { Type } from "class-transformer";
import { Experiment } from "../../experiment/base/Experiment";
import { EnumParameterSpaceParameterType } from "./EnumParameterSpaceParameterType";
import { EnumParameterSpaceValueType } from "./EnumParameterSpaceValueType";

@ObjectType()
class ParameterSpace {
  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  bounds!: JsonValue;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: () => [Experiment],
  })
  @ValidateNested()
  @Type(() => Experiment)
  @IsOptional()
  experiments?: Array<Experiment>;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name!: string | null;

  @ApiProperty({
    required: true,
    enum: EnumParameterSpaceParameterType,
  })
  @IsEnum(EnumParameterSpaceParameterType)
  @Field(() => EnumParameterSpaceParameterType, {
    nullable: true,
  })
  parameterType?: "Range" | "Choice" | "Fixed";

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: false,
    enum: EnumParameterSpaceValueType,
  })
  @IsEnum(EnumParameterSpaceValueType)
  @IsOptional()
  @Field(() => EnumParameterSpaceValueType, {
    nullable: true,
  })
  valueType?: "BOOL" | "FLOAT" | "INT" | "STRING" | null;
}

export { ParameterSpace as ParameterSpace };
